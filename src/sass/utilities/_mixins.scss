/* MIXINS */
// MEDIAQUERIES
@mixin mq($media){
	@if type-of($media) == number {
		@if unitless($media) {
			@media only screen and (max-width: $media + px){
				@content;
			}  
		}
	} @else {
		@if type-of(map-get($mediaqueries,$media)) == number {
			@media only screen and (max-width: map-get($mediaqueries,$media) + px){
				@content;
			}
		} @else if type-of(map-get($mediaqueries,$media)) == string {
			@media #{map-get($mediaqueries,$media)}{
				@content;
			}
		}
	}
}
// Flexbox
@mixin flex($horizontal: center, $vertical: center, $wrap:wrap, $display: flex){
	display: $display;
	justify-content: $horizontal;
	align-items: $vertical;
	align-content: $vertical;
	flex-wrap: $wrap;
}

// PX to REM
@mixin fontSize($size){
    font-size: ($size / $baseFont) + rem;
}
// PX TO REM OPTION FUNCTION
@function toRem($size){
	$newSize: ($size / $baseFont) + rem;
	@return $newSize;
}

// Transitions
@mixin transition($property: all, $time: .3, $timing: ease){
	transition: $property $time + s $timing;
}

// Call animation
@mixin animation($name, $time) {
	animation: $name linear $time;
	animation-iteration-count: infinite;
	transform-origin: 50% 50%;
}

// Placeholder styles
@mixin optional-at-root($sel) {
	@at-root #{if(not &, $sel, selector-append(&, $sel))} {
		@content;
	}
}

@mixin placeholder {
	@include optional-at-root('::-webkit-input-placeholder') {
		@content;
	}
	@include optional-at-root(':-moz-placeholder') {
		@content;
	}
	@include optional-at-root('::-moz-placeholder') {
		@content;
	}
	@include optional-at-root(':-ms-input-placeholder') {
		@content;
	}
}

// Clear float
@mixin clear-b () {
	&::after,&::before{
		content: "";
		display: table;
		clear: both;
		width: 100%;
	}
}
.clear-b{
	@include clear-b;
}

/* ITERATIONS */

// Margins and Paddings
@for $i from 0 through 20 {
	$value: $i * 5;
	// Margin
	.mt#{$value}{
		margin-top: #{$value}px;
	}
	.mb#{$value}{
		margin-bottom: #{$value}px;
	}
	.mr#{$value}{
		margin-right: #{$value}px;
	}
	.ml#{$value}{
		margin-left: #{$value}px;
	}
	// Padding
	.pt#{$value}{
		padding-top: #{$value}px;
	}
	.pb#{$value}{
		padding-bottom: #{$value}px;
	}
	.pr#{$value}{
		padding-right: #{$value}px;
	}
	.pl#{$value}{
		padding-left: #{$value}px;
	}
}

// Margins and Paddings on mobile
@for $i from 0 through 10 {
	$value: $i * 5;
	// Margins
	.mtm#{$value}{
		@include mq(mob){
			margin-top: #{$value}px;
		}
	}
	.mbm#{$value}{
		@include mq(mob){
			margin-bottom: #{$value}px;
		}
	}
	.mlm#{$value}{
		@include mq(mob){
			margin-left: #{$value}px;
		}
	}
	.mrm#{$value}{
		@include mq(mob){
			margin-right: #{$value}px;
		}
	}
	// Paddings
	.ptm#{$value}{
		@include mq(mob){
			padding-top: #{$value}px;
		}
	}
	.pbm#{$value}{
		@include mq(mob){
			padding-bottom: #{$value}px;
		}
	}
	.plm#{$value}{
		@include mq(mob){
			padding-left: #{$value}px;
		}
	}
	.prm#{$value}{
		@include mq(mob){
			padding-right: #{$value}px;
		}
	}
}


  
  @for $i from 0 through 10 {
	$value: $i * 5;
  
	// Margins
	.mM#{$value} {
	  @include mq(mob) {
		margin: #{$value}px !important;
	  }
	}
  
	.mtM#{$value} {
	  @include mq(mob) {
		margin-top: #{$value}px !important;
	  }
	}
  
	.mbM#{$value} {
	  @include mq(mob) {
		margin-bottom: #{$value}px !important;
	  }
	}
  
	.mlM#{$value} {
	  @include mq(mob) {
		margin-left: #{$value}px !important;
	  }
	}
  
	.mrM#{$value} {
	  @include mq(mob) {
		margin-right: #{$value}px !important;
	  }
	}
  
	// Paddings
	.pM#{$value} {
	  @include mq(mob) {
		padding: #{$value}px !important;
	  }
	}
  
	.ptM#{$value} {
	  @include mq(mob) {
		padding-top: #{$value}px !important;
	  }
	}
  
	.pbM#{$value} {
	  @include mq(mob) {
		padding-bottom: #{$value}px !important;
	  }
	}
  
	.plM#{$value} {
	  @include mq(mob) {
		padding-left: #{$value}px !important;
	  }
	}
  
	.prM#{$value} {
	  @include mq(mob) {
		padding-right: #{$value}px !important;
	  }
	}
  }